/* eslint-disable no-const-assign */

import React, { useEffect, useRef, useState } from "react";


import { List } from "./List";

/*
  –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª.
  
  –û–ø–∏—Å–∞–Ω–∏–µ:
  –ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ "–î–æ–±–∞–≤–∏—Ç—å —á–∏—Å–ª–æ", –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–æ–∫–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ.

  "–°—Ç–∞—Ä—Ç" ‚Äî –∑–∞–ø—É—Å–∫–∞–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ 1 —Å–µ–∫., –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ.

  "–°—Ç–æ–ø" ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä.

  "–ü–æ–∫–∞–∑–∞—Ç—å / –°–∫—Ä—ã—Ç—å" - –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

  üî¥ –ü—Ä–æ–±–ª–µ–º—ã:

  1. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–°—Ç–∞—Ä—Ç", –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ 1 —á–∏—Å–ª–æ –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞. –ü–æ—á–µ–º—É?

  2. "–°—Ç–æ–ø" –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä. –ü–æ—á–µ–º—É?

  3. –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–ü–æ–∫–∞–∑–∞—Ç—å / –°–∫—Ä—ã—Ç—å" —Å–ø–∏—Å–æ–∫ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ [1, 2, 3]. –ü–æ—á–µ–º—É?

  ‚ö†Ô∏è –ë–æ–Ω—É—Å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):

  1. –ü–æ—Å–ª–µ —Å–∫—Ä—ã—Ç–∏—è —Å–ø–∏—Å–∫–∞, —Ç–∞–π–º–µ—Ä –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É –∏ –±—É–¥–µ—Ç –ø—ã—Ç–∞—Ç—å—Å—è —Å–¥–µ–ª–∞—Ç—å —Ä–µ—Ä–µ–Ω–¥–µ—Ä, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ –º–æ–∂–µ—Ç —É–∂–µ –±—ã—Ç—å (—Å–º. –≤ –∫–æ–Ω—Å–æ–ª–∏ –æ—à–∏–±–∫—É). –ü–æ—á–µ–º—É?

  2. –ü–æ—á–µ–º—É —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Button –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–µ–π—Ç–∞ –≤ List? –ú–æ–∂–Ω–æ –ª–∏ —ç—Ç–æ –∫–∞–∫-—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?

  3. –ß—Ç–æ –µ—â—ë –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –≤ —ç—Ç–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏?
  
*/

export default function App() {
  const [visibleList, setVisibleList] = React.useState(true);
  const [numbers, setNumbers] = React.useState([1, 2, 3]);
  const [start,setStart] = useState(false)
  const ref = useRef<number>()



  const addRandomNumber = () => {
    const random = Math.round(Math.random() * 10);
    setNumbers(prev => [...prev, random]);
  };


  

  useEffect(() => {
    if(start){
      ref.current = setInterval(addRandomNumber,1000)
    } else{
      clearInterval(ref.current)
    }
    return () => clearInterval(ref.current)
  },[start])

  const toggleVisibleList = () => {
    if(visibleList) {
      setVisibleList(false)
      setStart(false)
      clearInterval(ref.current)
    } else{
      setVisibleList(true)
    }
  };

  return (
    <div className="App">
      <button onClick={toggleVisibleList}>–ü–æ–∫–∞–∑–∞—Ç—å / –°–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫</button>
      <br />
      <br />
      {visibleList && <List addRandomNumber={addRandomNumber} numbers={numbers} startAndStop={setStart} />}
    </div>
  );
}
